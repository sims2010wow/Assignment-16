#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <ctype.h>
#include <string.h>


struct structure_type1
{  //A structure type is defined that has categories for the size of the matrix (row and col) and the matrix
	int size[2];
	float array[30][30];
};

char choice(void);
struct structure_type1 loader(void);   //first function declared 

int main(void) {
	struct structure_type1 data;
	char will;
	data=loader();  //load data function
	will=choice();  //user choice of operation 
	

	printf("\n");
	system("pause");
}

struct structure_type1 loader(void) {       //function a
	struct structure_type1 data;  //this structure type is given to the varible data
	FILE *file;
	char name[30];
	int i,j;
	printf("Enter the name of the data to load: ");
	scanf(" %s", &name);     //name of file set to variable "name"
	file = fopen(name,"r");  //pointer uses "name" given by user
	fscanf(file, "%d %d",&data.size[0], &data.size[1]);     //row and cols scaned and assigned to data.size[]

	for (j = 0; j < data.size[0]; j++) {
		for (i = 0; i < data.size[1]; i++) {        //scan out the matrix into data.array[][]
			fscanf(file, "%f", &data.array[j][i]);
		}
	}
	fclose(file);
	return data;
}

char choice(void) { //function b
	int test;
	char will;
	//menu for user
	printf("\n\		Enter A to add two matrices\n\
		Enter S to subtract two matrices\n\
		Enter M to multiply two matrices\n\
		Enter E to multiply the element by elements of two matrices\n\
		Enter Q to quit\n");
	do   //user choice with error check 
	{
		printf("Please enter a choice: ");
		scanf(" %c", &will);
		will = toupper(will);
		test = 0;
		switch (will)
		{
		case 'A':
			printf("Add matrices");
			break;
		case 'S':
			printf("Subtract matrices");
			break;
		case 'M':
			printf("Multiply matrices");
			break;
		case 'E':
			printf("Multiply element by matrices");
			break;
		case 'Q':
			printf("Quit");
			break;
		default:
			printf("Bad input");
			test = 1337;   //if test=1337 then loop do while untill good input
		}
	} while (test == 1337);
	return will;
}
